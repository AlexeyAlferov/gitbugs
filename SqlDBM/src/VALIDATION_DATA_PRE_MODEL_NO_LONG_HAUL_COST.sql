-- ***************************** SqlDBM: Snowflake ****************************
-- * Generated by SqlDBM: MART SCHEMA, v18 by lesya.rylova+standard@gmail.com *


-- ************************************** VALIDATION_DATA_PRE_MODEL_NO_LONG_HAUL_COST
CREATE VIEW VALIDATION_DATA_PRE_MODEL_NO_LONG_HAUL_COST AS
SELECT  TC.LANE_ORIGIN_FAC_ID,
		TC.LANE_DESTINATION_FAC_ID,
		TC.WASTE_TYPE AS WASTE_TYPE,
		MP.TOTAL_TONS AS TOTAL_TONS,
       'No long haul cost supplied for Origin '||TC.LANE_ORIGIN_FAC_ID||', destination '||TC.LANE_DESTINATION_FAC_ID||' and Waste type '||TC.WASTE_TYPE||
       '. A substitute cost of $'||MTC.LONG_HAUL_COST||' was applied.'||
     	CASE WHEN TOTAL_RECORDS IS NULL THEN ' Origin and waste type have no collection points  ' ELSE
        ' Origin and waste type accounts for '||TOTAL_RECORDS ||' Collection Points and '||TOTAL_TONS||' Tons' END AS DETAIL
		,SUBSTR(TC.LANE_ORIGIN_FAC_ID,1,6) AS LH_PARM_1
		,LH_FAC_TYPE(TC.LANE_ORIGIN_FAC_ID)  AS LH_PARM_2
		,TC.WASTE_TYPE AS LH_PARM_3
		,SUBSTR(TC.LANE_DESTINATION_FAC_ID,1,6) AS LH_PARM_4
		,LH_FAC_TYPE(TC.LANE_DESTINATION_FAC_ID)  AS LH_PARM_5
FROM PRE_MODEL_TRANSFER_COSTS TC
LEFT JOIN
(
  SELECT MCP.DISPFACID AS DISPFACID ,
          WASTE_TYPE ,
          COUNT(*) AS TOTAL_RECORDS ,
          SUM(TONS) AS TOTAL_TONS
   FROM MODEL_COLLECTION_POINTS MCP
   GROUP BY DISPFACID ,
            WASTE_TYPE
) MP ON TC.LANE_ORIGIN_FAC_ID = MP.DISPFACID
AND TC.WASTE_TYPE=MP.WASTE_TYPE
	INNER JOIN MODEL_TRANSFER_COSTS MTC ON 	MTC.LANE_ORIGIN_FAC_ID = TC.LANE_ORIGIN_FAC_ID AND
											MTC.LANE_DESTINATION_FAC_ID = TC.LANE_DESTINATION_FAC_ID AND
											MTC.WASTE_TYPE = TC.WASTE_TYPE
	WHERE TC.LONG_HAUL_COST IS NULL
;
